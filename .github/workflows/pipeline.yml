name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  SKIP_DEPLOYMENT: ${{ contains(join(github.event.commits.*.message, ' '), '#skip') }}

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run eslint
        id: lint-check
        continue-on-error: true  # Lint errors won't stop the pipeline

      - name: Create status for Lint
        uses: actions/github-script@v6
        with:
          script: |
            const { context: ctx, github } = require('@actions/github');
            const conclusion = '${{ steps.lint-check.conclusion }}' === 'success' ? 'success' : 'failure';
            await github.repos.createCommitStatus({
              owner: ctx.repo.owner,
              repo: ctx.repo.repo,
              sha: ctx.sha,
              state: conclusion,
              description: 'Lint check ' + conclusion,
              context: 'lint-check'
            });

      - name: Build
        run: npm run build
        id: build-check
        continue-on-error: true  # Build errors won't stop the pipeline

      - name: Create status for Build
        uses: actions/github-script@v6
        with:
          script: |
            const { context: ctx, github } = require('@actions/github');
            const conclusion = '${{ steps.build-check.conclusion }}' === 'success' ? 'success' : 'failure';
            await github.repos.createCommitStatus({
              owner: ctx.repo.owner,
              repo: ctx.repo.repo,
              sha: ctx.sha,
              state: conclusion,
              description: 'Build ' + conclusion,
              context: 'build-check'
            });

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Test
        run: npm run test
        id: test-check
        continue-on-error: true  # Test errors won't stop the pipeline

      - name: Create status for Test
        uses: actions/github-script@v6
        with:
          script: |
            const { context: ctx, github } = require('@actions/github');
            const conclusion = '${{ steps.test-check.conclusion }}' === 'success' ? 'success' : 'failure';
            await github.repos.createCommitStatus({
              owner: ctx.repo.owner,
              repo: ctx.repo.repo,
              sha: ctx.sha,
              state: conclusion,
              description: 'Test check ' + conclusion,
              context: 'test-check'
            });

      - name: Run Playwright E2E tests
        run: npm run test:e2e
        id: test-e2e-check
        continue-on-error: true  # E2E test errors won't stop the pipeline

      - name: Create status for E2E Test
        uses: actions/github-script@v6
        with:
          script: |
            const { context: ctx, github } = require('@actions/github');
            const conclusion = '${{ steps.test-e2e-check.conclusion }}' === 'success' ? 'success' : 'failure';
            await github.repos.createCommitStatus({
              owner: ctx.repo.owner,
              repo: ctx.repo.repo,
              sha: ctx.sha,
              state: conclusion,
              description: 'E2E Test ' + conclusion,
              context: 'test-e2e-check'
            });

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Trigger deployment
        if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Bump version and push tag
        if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          WITH_V: true




# name: Deployment pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches: [main]
#     types: [opened, synchronize]

# env:
#   SKIP_DEPLOYMENT: ${{ contains(join(github.event.commits.*.message, ' '), '#skip') }}

# jobs:
#   simple_deployment_pipeline:
#     runs-on: ubuntu-20.04
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: "20"

#       - name: Install dependencies
#         run: npm install

#       - name: Lint
#         run: npm run eslint
#         id: lint-check
#         if: always()

#       - name: Build
#         run: npm run build
#         id: build-check
#         if: always()

#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps

#       - name: Test
#         run: npm run test
#         id: test-check
#         if: always()

#       - name: Run Playwright tests
#         run: npm run test:e2e
#         id: test-e2e-check
#         if: always()

#       - uses: actions/upload-artifact@v4
#         if: ${{ !cancelled() }}
#         with:
#           name: playwright-report
#           path: playwright-report/
#           retention-days: 30

#       - name: Trigger deployment
#         if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
#         run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

#       - name: Deploy to Render
#         if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
#         run: |
#           echo "Deploying to Render"
#           git push https://github.com/lemon1964/full-stack-open-pokedex.git HEAD:main

#   tag_release:
#     needs: [simple_deployment_pipeline]
#     runs-on: ubuntu-20.04
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
  
#       - name: Bump version and push tag
#         if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
#         uses: anothrNick/github-tag-action@1.71.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           WITH_V: true
